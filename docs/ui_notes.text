login
context -> llm -> test (chat)
context -> surce
context -> loads


npx create-next-app@latest
npm install clsx
npm install @heroicons/react
npm install next-auth@beta
"C:\Program Files\Git\usr\bin\openssl" rand -base64 32
npm i zod
npm i bcrypt
npm i --save-dev @types/bcrypt
npm i prisma # solo per l'ambiente di sviluppo
npm i @prisma/client

npx prisma init
>>>>>>

✔ Your Prisma schema was created at prisma/schema.prisma
  You can now open it in your favorite editor.

warn You already have a .gitignore file. Don't forget to add `.env` in it to not commit any private information.

Next steps:
1. Set the DATABASE_URL in the .env file to point to your existing database. If your database has no tables yet, read https://pris.ly/d/getting-started
2. Set the provider of the datasource block in schema.prisma to match your database: postgresql, mysql, sqlite, sqlserver, mongodb or cockroachdb.
3. Run prisma db pull to turn your database schema into a Prisma schema.
4. Run prisma generate to generate the Prisma Client. You can then start querying your database.

npx ... command prisma

*** WARNING ***

The following models were ignored as they do not have a valid unique identifier or id. This is currently not supported by Prisma Client:
  - "cy_history"
  - "cy_load_trace"

These fields are not supported by Prisma Client, because Prisma currently does not support their types:
  - Model: "cy_chunk", field: "embedding", original data type: "vector"
  - Model: "cy_load", field: "embedding", original data type: "vector"


(.venv) C:\Users\User\VSProjects\cy-genai\gui\cy-genai-ui>npx prisma generate
Environment variables loaded from .env
Prisma schema loaded from prisma\schema.prisma

✔ Generated Prisma Client (v5.14.0) to .\node_modules\@prisma\client in 158ms

Start using Prisma Client in Node.js (See: https://pris.ly/d/client)
```
import { PrismaClient } from '@prisma/client'
const prisma = new PrismaClient()
```
or start using Prisma Client at the edge (See: https://pris.ly/d/accelerate)
```
import { PrismaClient } from '@prisma/client/edge'
const prisma = new PrismaClient()
```
<<<<